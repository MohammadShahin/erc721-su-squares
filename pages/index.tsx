import Head from 'next/head'
import React from 'react'
import styles from '../styles/Home.module.css'
import { useAccount, useConnect, useDisconnect, useContract, useSigner } from 'wagmi'
// import { calculatorAbi } from '../src/abi'
import { useToast, Button, Input, Text, Flex, Box, Heading, NumberInput, NumberInputField } from '@chakra-ui/react'
import { abi, address as contractAddress } from '../src/constants'
import { NFTGrid } from '../src/components'

const maxChar = 50;
const GRID_HEIGHT = 20
const GRID_WIDTH = 50


export default function Home() {

  // Wagmi
  const { address, isConnected } = useAccount()
  const { data: signer } = useSigner()
  const { connect, connectors } = useConnect()
  const { disconnect } = useDisconnect()

  // Contract metadata
  const contract = useContract({ address: contractAddress, abi, signerOrProvider: signer })
  const [contractName, setContractName] = React.useState<string>()
  const [contractSymbol, setContractSymbol] = React.useState<string>()
  const [cells, setCells] = React.useState<string[][]>([[]])

  React.useEffect(() => {
    // Getting from the contract.
    const newCells = Array(1000).map(() => "")


    const newCellsReshaped = []
    while(newCells.length) newCellsReshaped.push(newCells.splice(0, GRID_WIDTH));
    setCells(newCellsReshaped)
  }, [])

  // UI
  const toast = useToast()

  React.useEffect(() => {
    const updateContractDetails = async () => {
      if (contract && isConnected) {
        const promises = [contract.name(), contract.symbol()]
        const promisesResult = await Promise.allSettled(promises)
        if (promisesResult[0].status === 'fulfilled') {
          setContractName(promisesResult[0].value)
        }
        if (promisesResult[1].status === 'fulfilled') {
          setContractSymbol(promisesResult[1].value)
        }
      }
    }
    updateContractDetails()
  }, [contract, isConnected])


  React.useEffect(() => {
    disconnect()
  }, [])

  const handleOnClickCell = (posX: number, posY: number) => {

  }

  return (
    <Box p="0 2rem">
      <Head>
        <title>ERC20 Contract</title>
        {/* <meta name="description" content="Generated by create next app" /> */}
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>

        {isConnected ?
          <React.Fragment>
            <Heading as='h1' fontSize={"4rem"} lineHeight="1.1">
              Welcome to <span className={styles.blue}>Blockchain SU-Squares Contract</span>
            </Heading>

            <Heading mt='10'>
              The address of the contract is <span className={styles.blue}>{address}</span>
            </Heading>

            <Text mt='10'>
              The name of the contract is <span className={styles.blue}>{contractName}</span>
              <br />
              The symbol of the contract is <span className={styles.blue}>{contractSymbol}</span>
              <br />
            </Text>

            <Heading mt='10' mb="10">
              Your address: <span className={styles.blue}>{address}</span>
            </Heading>

            <NFTGrid height={GRID_HEIGHT} width={GRID_WIDTH} onClickCell={handleOnClickCell} cells={cells} />

          </React.Fragment>
          :
          <React.Fragment>
            <Heading fontSize={"4rem"} lineHeight="1.1">
              Welcome to <span className={styles.blue}>Blockchain ERC20 Contract</span>
            </Heading>
            <Text >
              Please connect to metamask to continue.
            </Text>
            <div className={styles.inputs}>
              <Button onClick={() => {
                connect({ connector: connectors[0] })
              }}>Connect Wallet</Button>
            </div>
          </React.Fragment>
        }
      </main>
    </Box>
  )
}
